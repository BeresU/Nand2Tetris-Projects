// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack
/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {

    static int currentColor;
    static Array powersOfTwo; 

    /** Initializes the Screen. */
    function void init() {
        let currentColor = 1;

        let i = 1;
        let powersOfTwo[0] = 1; 

        while(i < 16){
            let powersOfTwo[i] = powersOfTwo[i-1] + powersOfTwo[i-1];
            let i = i + 1;
        }

        return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
        return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        if (b=true){
            let currentColor = 1;
        }
        else{
            let currentColor = 0;
        }
        return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
        var int address, value, bitPlace, pixelNumber;

        let address = 32 * y + (x / 16);
        let value = Memory.peek(16384 + address);
        let bitPlace = Screen.mod(x, 16);
        let pixelNumber = powersOfTwo[bitPlace];

        if (currentColor == 0){
            value = value & ~(pixelNumber);
        }
        else{
            value = value | pixelNumber;
        }
        
        do Memory.poke(address, value);
        return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     *  and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
        return;
    }

    function int mod (int a, int b) {
        return  a - (b * (a / b));
    }
}
