class Player {
    field int size;
    field Array positions;
    field int moveDirection;

    constructor Player new (int playerPosition, int playerSize) {
        var int i; 
        var int partPosition;
        let size = playerSize;
        let positions = Array.new(playerSize);
        let moveDirection = 0;

        let i = 0;

        while (i < playerSize){
            let partPosition = playerPosition - i;
            let positions[i] = partPosition;
            do Graphics.drawPlayer(partPosition);
            let i = i + 1;
        }

       return this;
    }

    method int getPosition() {
        return positions[0];
    }

    method void increaseSize() {
        var Array tempArray;
        var int i;
        var int tailPosition;
        let size = size + 1;
        let tempArray = positions;
        let positions = Array.new(size);

        let i = 0;

        while (i < tempArray - 1) {
            let positions[i] = tempArray[i];
        }

        if (moveDirection = 1) {
            let tailPosition = positions[size - 2] + 512;
        }

        if (moveDirection = 2) {
            let tailPosition = positions[size - 2] - 512;
        }

        if (moveDirection = 1) {
            let tailPosition = positions[size - 2] + 1;
        }

        if (moveDirection = 1) {
            let tailPosition = positions[size - 2] - 1;
        }

        let positions[size - 1] = tailPosition;
        do Graphics.drawPlayer(tailPosition);

        return this;
    }

    method void dispose() { 
        do Memory.deAlloc(this);
        return;
    }

    method void hide() { 
        var int i;
        let i = 0;

        while(i < size) {
            do Graphics.erasePlayer(positions[i]);
            let i = i + 1;
        }
        return;
    }

    method void moveAccordingToDirection(int direction) {
        if (direction = 0) { return; }
        let moveDirection = direction;
        if (direction = 1) { do moveUp(); }
        if (direction = 2) { do moveDown(); }
        if (direction = 3) { do moveLeft(); }
        if (direction = 4) { do moveRight(); }
        return;
    }

    method void moveUp() {
        do move(-512);
        return;
    }

    method void moveDown() {
        do move(512);
        return;
    }

    method void moveRight() {
        do move(1);
        return;
    }

    method void moveLeft() {
        do move(-1);
        return;
    }

    method void move(int target) {
        var int i;
        var int headPosition;
        var int partPosition;

        let i = 0;

        while (i < size){
            do Graphics.erasePlayer(positions[i]);
            let i = i + 1;
        }

        let headPosition = positions[0];
        let positions[0] = headPosition + target;
        do Graphics.drawPlayer(positions[0]);

        let i = 1;

        while (i < size){
            let partPosition = positions[i];
            let positions[i] = headPosition;
            let headPosition = partPosition;
            do Graphics.drawPlayer(positions[i]);
            let i = i + 1;
        }
        return;
    }
}