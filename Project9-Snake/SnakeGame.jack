class SnakeGame {

    field Player player;
    field int direction; 
    field int waitTime;

    constructor SnakeGame new () {
        do Graphics.drawBackground();
        let player = Player.new(24*256+200, 1);
        let direction = 0;
        let waitTime = 500;
        return this;
    }

   method void movePlayer() {
      if (direction = 0) { return; }
      if (direction = 1) { do player.moveUp(); }
      if (direction = 2) { do player.moveDown(); }
      if (direction = 3) { do player.moveLeft(); }
      if (direction = 4) { do player.moveRight(); }
      do Sys.wait(waitTime);  
      return;
   }

   method void run() {
      var char key;  
      var boolean exit;
      let exit = false;
      
      while (~exit) {
        let key = Keyboard.keyPressed();

        if (key = 81)  { let exit = true; }     
        if (key = 131) { let direction = 1; }   // up arrow
        if (key = 133) { let direction = 2; }   // down arrow
        if (key = 130) { let direction = 3; }   // left arrow
        if (key = 132) { let direction = 4; }   // right arrow
        
        do movePlayer();
     } 
     return;
   }

    method void dispose(){
        do player.dispose();
        do Memory.deAlloc(this);
        return;
    }
} 