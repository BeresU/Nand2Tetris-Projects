class SnakeGame {

    field Player player;
    field int direction; 
    field int waitTime;

    constructor SnakeGame new () {
        do Graphics.drawBackground();
        let player = Player.new(24*256+200, 4);
        let direction = 0;
        let waitTime = 150;
        return this;
    }   
    
    method void movePlayer() {
        do player.moveAccordingToDirection(direction);
        do Sys.wait(waitTime);  
        return;
   }

   method void run() {
      var char key;  
      var boolean exit;
      let exit = false;
      
      while (~exit) {
        let key = Keyboard.keyPressed();

        if (key = 81)  { let exit = true; }     

        // up arrow
        if ((key = 131) & (~(direction = 2))) { let direction = 1;}   

        // down arrow
        if ((key = 133) & (~(direction = 1))) { let direction = 2;}

        // left arrow
        if ((key = 130) & (~(direction = 4))) {let direction = 3;}

        // right arrow
        if ((key = 132) & (~(direction = 3))) { let direction = 4;}   
        
        do movePlayer();
     } 
     return;
   }

    method void dispose(){
        do player.dispose();
        do Memory.deAlloc(this);
        return;
    }
} 