class Graphics {
    function void drawBackground () {
        do Graphics.drawLeftRightSides();
        do Graphics.drawBottomUpperSides();
        return;
    }

    function void drawLeftRightSides(){
        var int i;
        var int rows;
        var int rowAddress;

        let i = 1;
        let rows = 15;

        while(i < rows) {
            let rowAddress = 512*i;
            do Graphics.drawBackgroundBlock(rowAddress);
            do Graphics.drawBackgroundBlock(31+rowAddress);
            let i = i + 1;
        }
        return;
    }

    function void drawBottomUpperSides(){
        var int i;
        var int columns;
        var int bottomPixels;

        let i = 0;
        let columns = 32;
        let bottomPixels = 512*15;

        while(i < columns) {
            do Graphics.drawBackgroundBlock(i);
            do Graphics.drawBackgroundBlock(bottomPixels + i);
            let i = i + 1;
        }
        return;
    }

    function void drawBackgroundBlock (int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress +32, -31807);
        do Memory.poke(memAddress +64, -31807);
        do Memory.poke(memAddress +96, -31807);
        do Memory.poke(memAddress +128, -31807);
        do Memory.poke(memAddress +160, -31807);
        do Memory.poke(memAddress +192, -1);
        do Memory.poke(memAddress +224, -1);
        do Memory.poke(memAddress +256, -1);
        do Memory.poke(memAddress +288, -1);
        do Memory.poke(memAddress +320, -31807);
        do Memory.poke(memAddress +352, -31807);
        do Memory.poke(memAddress +384, -31807);
        do Memory.poke(memAddress +416, -31807);
        do Memory.poke(memAddress +448, -31807);
        do Memory.poke(memAddress +480, -1);
        return;
    }

    function void drawPlayer(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        // column 1
        // column 2
        do Memory.poke(memAddress +2, 255);
        do Memory.poke(memAddress +34, 129);
        do Memory.poke(memAddress +66, 129);
        do Memory.poke(memAddress +98, 153);
        do Memory.poke(memAddress +130, 153);
        do Memory.poke(memAddress +162, 129);
        do Memory.poke(memAddress +194, 129);
        do Memory.poke(memAddress +226, 255);
        return;
    }

    function void erasePlayer(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        // column 1
        // column 2
        do Memory.poke(memAddress +2, 0);
        do Memory.poke(memAddress +34, 0);
        do Memory.poke(memAddress +66, 0);
        do Memory.poke(memAddress +98, 0);
        do Memory.poke(memAddress +130, 0);
        do Memory.poke(memAddress +162, 0);
        do Memory.poke(memAddress +194, 0);
        do Memory.poke(memAddress +226, 0);
        return;
    }
}